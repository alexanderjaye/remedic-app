// {
//   "compilerOptions": {
//     /* Visit https://aka.ms/tsconfig.json to read more about this file */
//     // below merges custom types (such as express extended req/res types)
//     // "typeRoots" : [
//     //   "@types", // custom merged types MUST be first in a list
//     //   "./node_modules/@types",
//     // ],
//     "target": "es2018",
//     "module": "commonjs",   /* Specify module code generation: 'none', 'commonjs', 'amd', 'system', 'umd', 'es2015', 'es2020', or 'ESNext'. */
//     "allowJs": true,                       /* Allow javascript files to be compiled. */
//     "noEmit": true,                        /* Do not emit outputs. */
//     /* Strict Type-Checking Options */
//     "strict": true,                           /* Enable all strict type-checking options. */
//     "noImplicitAny": true,                 /* Raise error on expressions and declarations with an implied 'any' type. */
//     "strictNullChecks": true,              /* Enable strict null checks. */
//     // "strictFunctionTypes": true,           /* Enable strict checking of function types. */
//     // "strictBindCallApply": true,           /* Enable strict 'bind', 'call', and 'apply' methods on functions. */
//     // "strictPropertyInitialization": true,  /* Enable strict checking of property initialization in classes. */
//     // "noImplicitThis": true,                /* Raise error on 'this' expressions with an implied 'any' type. */
//     // "alwaysStrict": true,                  /* Parse in strict mode and emit "use strict" for each source file. */

//     /* Additional Checks */
//     "noUnusedLocals": true,                /* Report errors on unused locals. */
//     "noUnusedParameters": true,            /* Report errors on unused parameters. */

//     /* Module Resolution Options */
//     "moduleResolution": "node",            /* Specify module resolution strategy: 'node' (Node.js) or 'classic' (TypeScript pre-1.6). */
//     "resolveJsonModule": true,

//     "allowSyntheticDefaultImports": true,  /* Allow default imports from modules with no default export. This does not affect code emit, just typechecking. */
//     "esModuleInterop": true,                  /* Enables emit interoperability between CommonJS and ES Modules via creation of namespace objects for all imports. Implies 'allowSyntheticDefaultImports'. */

//     /* Experimental Options */
//     "experimentalDecorators": true,        /* Enables experimental support for ES7 decorators. */
//     "emitDecoratorMetadata": true,         /* Enables experimental support for emitting type metadata for decorators. */

//     /* Advanced Options */
//     "skipLibCheck": true,                     /* Skip type checking of declaration files. */
//     "forceConsistentCasingInFileNames": true,  /* Disallow inconsistently-cased references to the same file. */
//     "outDir": "./dist/"
//   },
//   "include": [
//     "./src/**/*.ts"
//   ],
// }

{
  "compilerOptions": {
    "target": "es6",
    "module": "commonjs",
    "lib": [
      "dom",
      "es6",
      "es2017",
      "esnext.asynciterable"
    ],
    "sourceMap": true,
    "outDir": "./dist",
    "moduleResolution": "node",
    "removeComments": true,
    "noImplicitAny": true,
    "strictNullChecks": true,
    "strictFunctionTypes": true,
    "noImplicitThis": true,
    "noUnusedLocals": true,
    "noUnusedParameters": true,
    "noImplicitReturns": true,
    "noFallthroughCasesInSwitch": true,
    "allowSyntheticDefaultImports": true,
    "esModuleInterop": true,
    "emitDecoratorMetadata": true,
    "experimentalDecorators": true,
    "resolveJsonModule": true,
    "baseUrl": "."
  },
  "exclude": [
    "node_modules"
  ],
  "include": [
    "./src/**/*.ts"
  ]
}